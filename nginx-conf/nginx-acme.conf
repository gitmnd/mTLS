worker_processes 1;
events { worker_connections 1024; }

http {
  ##
  ## 1. Inbound: National Bank  → acme (acme acts as mTLS server)
  ## ssl_client_certificate : This defines which Certificate Authority (CA) NGINX trusts to verify client certificates.
  ## ssl applies for incoming requests.
  ## NGINX will act as a TLS server, accepting secure connections (e.g., from National Bank) on port 9443.
  ## server_name : NGINX uses the Host header from the incoming request to match the appropriate server block.
  ## ssl_ refers to the inbound listener, while proxy_ssl_ refers to the outbound connection initiated by NGINX.
  ## ssl_* directives → apply when nginx is acting as the server
  ## proxy_ssl_* directives → apply when nginx is acting as the client

  server {
    listen 9443 ssl;
    server_name api.acme.com;

    ssl_certificate     D://projects//mTLS/rootCA//api_acme_com.crt;
    ssl_certificate_key D://projects//mTLS/acme//api_acme_com.key;

    ssl_client_certificate D://projects//mTLS//rootCA//certs//nationalbank-rootCA.crt;
    ssl_verify_client on;

    location / {
      proxy_pass http://localhost:8087;  # Spring Boot service for acme
    }
  }

  ##
  ## 2. Outbound: acme spring boot → National Bank (acme acts as mTLS client)
  ## NATIONALBANK Upstream server is the one providing the service or data.
  server {
    listen 9000;
    server_name localhost;

    location / {
      proxy_pass https://api.nationalbank.com:8443;

      proxy_ssl_certificate     D://projects//mTLS//rootCA//api_acme_com.crt;
      proxy_ssl_certificate_key D://projects//mTLS//acme//api_acme_com.key;
      proxy_ssl_trusted_certificate D://projects//mTLS//rootCA//certs//nationalbank-rootCA.crt;

      proxy_ssl_verify on;
      proxy_ssl_verify_depth 2;

      # Add this line to match the hostname
      proxy_ssl_server_name on;
      proxy_ssl_name api.nationalbank.com;
    }
  }
}
